{"version":3,"sources":["../../src/route/comments.js"],"names":["express","require","router","Router","Comment","Vote","bcrypt","User","Post","post","req","res","next","console","log","body","comment","user","description","newComment","save","err","json","action","message","status","code","put","updatedComment","findById","_id","comment_id","delete","id","remove","value","findOne","vote","data","karma","parseInt","removedValue","get","post_id","query","find","docs","params","comment_user","comment_post","joeComment","coments","i","hasOwnProperty","element","module","exports"],"mappings":"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","file":"comments.js","sourcesContent":["'use strict';\r\n\r\nconst express = require('express');\r\nconst router = express.Router();\r\n\r\nconst Comment = require('model/Comment');\r\nconst Vote = require('model/Vote');\r\n\r\nconst bcrypt = require('bcrypt-nodejs');\r\n\r\n// Test\r\nconst User = require('model/User');\r\nconst Post = require('model/Post');\r\n\r\n// CRUD methods\r\n// Create Comment //\r\nrouter.post('/create', (req, res, next) => {\r\n\tconsole.log(req.body);\r\n\tlet post = req.body.post;\r\n\tlet comment = req.body.comment;\r\n\tlet user = req.body.user;\r\n\tlet description = req.body.description;\r\n\r\n\tlet newComment = new Comment({\r\n\t\tpost: post,\r\n\t\tcomment: comment,\r\n\t\tuser: user,\r\n\t\tdescription: description\r\n\t});\r\n\tnewComment.save((err) => {\r\n\t\tif (err) {\r\n\t\t\treturn res.json({\r\n\t\t\t\taction: \"Error: \" + err.message,\r\n\t\t\t\tstatus: 'error',\r\n\t\t\t\tcode: 444\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\treturn res.json({\r\n\t\t\t\taction: 'New comment created',\r\n\t\t\t\tcomment: newComment,\r\n\t\t\t\tstatus: 'ok',\r\n\t\t\t\tcode: 200\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n});\r\n\r\n\r\n// Update Comment //\r\nrouter.put('/update', (req, res, next) => {\r\n\tlet updatedComment = req.body;\r\n\r\n\t// console.log(updatedComment);\r\n\r\n\t// return res.json({\r\n\t// \tupdatedComment\r\n\t// });\r\n\r\n\tComment.findById(updatedComment._id, (err, comment) => {\r\n\t\tif (err) {\r\n\t\t\treturn res.json({\r\n\t\t\t\taction: \"Error: \" + err.message,\r\n\t\t\t\tstatus: 'error',\r\n\t\t\t\tcode: 444\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// console.log(comment);\r\n\r\n\t\tlet post = updatedComment.post;\r\n\t\tlet comment_id = updatedComment.comment;\r\n\t\tlet user = updatedComment.user;\r\n\t\tlet description = updatedComment.description;\r\n\t\tlet status = updatedComment.status;\r\n\r\n\t\tcomment.post = post;\r\n\t\tcomment.comment = comment_id;\r\n\t\tcomment.user = user;\r\n\t\tcomment.description = description;\r\n\t\tcomment.status = status;\r\n\r\n\t\tcomment.save((err) => {\r\n\t\t\tif (err) {\r\n\t\t\t\treturn res.json({\r\n\t\t\t\t\taction: \"Error: \" + err.message,\r\n\t\t\t\t\tstatus: 'error',\r\n\t\t\t\t\tcode: 444\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\treturn res.json({\r\n\t\t\t\t\taction: 'Comment updated',\r\n\t\t\t\t\tcomment: comment,\r\n\t\t\t\t\tstatus: 'ok',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n});\r\n\r\n// Delete User // \r\nrouter.delete('/delete', (req, res, next) => {\r\n\tlet comment_id = req.body.id;\r\n\tComment.findById(comment_id, (err, comment) => {\r\n\t\tif (err) {\r\n\t\t\treturn res.json({\r\n\t\t\t\taction: \"Error: \" + err.message,\r\n\t\t\t\tstatus: 'error',\r\n\t\t\t\tcode: 444\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tcomment.remove((err) => {\r\n\t\t\tif (err) {\r\n\t\t\t\treturn res.json({\r\n\t\t\t\t\taction: \"Error: \" + err.message,\r\n\t\t\t\t\tstatus: 'error',\r\n\t\t\t\t\tcode: 444\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\treturn res.json({\r\n\t\t\t\t\taction: 'Comment deleted',\r\n\t\t\t\t\tstatus: 'ok',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n});\r\n\r\n// Vote\r\nrouter.post('/vote', (req, res, next) => {\r\n\tlet comment = req.body.comment;\r\n\tlet value = req.body.value;\r\n\tlet user = req.body.user;\r\n\r\n\tVote.findOne({\r\n\t\tcomment: comment,\r\n\t\tuser: user\r\n\t}, (err, vote) => {\r\n\t\tif (!vote) { // Vote doesn't exist\r\n\r\n\t\t\tif (value == 0) {\r\n\t\t\t\treturn res.json({\r\n\t\t\t\t\taction: \"Error: Vote doesn't exist, value can't be zero\",\r\n\t\t\t\t\tstatus: 'error',\r\n\t\t\t\t\tcode: 444\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// Create vote\r\n\t\t\tvote = new Vote({\r\n\t\t\t\tuser: user,\r\n\t\t\t\tcomment: comment,\r\n\t\t\t\tvalue: value\r\n\t\t\t});\r\n\t\t\tvote.save((err) => {\r\n\t\t\t\tif (err) {\r\n\t\t\t\t\treturn res.json({\r\n\t\t\t\t\t\taction: \"Error: \" + err.message,\r\n\t\t\t\t\t\tstatus: 'error',\r\n\t\t\t\t\t\tcode: 444\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Karma Change\r\n\t\t\t\t\tComment.findById(comment, (err, data) => {\r\n\t\t\t\t\t\tif (err) {\r\n\t\t\t\t\t\t\treturn res.json({\r\n\t\t\t\t\t\t\t\taction: \"Error: \" + err.message,\r\n\t\t\t\t\t\t\t\tstatus: 'error',\r\n\t\t\t\t\t\t\t\tcode: 444\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconsole.log(data);\r\n\r\n\t\t\t\t\t\tdata.karma += parseInt(value);\r\n\t\t\t\t\t\tdata.save();\r\n\t\t\t\t\t\treturn res.json({\r\n\t\t\t\t\t\t\taction: 'Vote created',\r\n\t\t\t\t\t\t\tvote: vote,\r\n\t\t\t\t\t\t\tstatus: 'ok',\r\n\t\t\t\t\t\t\tcode: 200\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\r\n\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t} else { // update vote\r\n\t\t\tlet removedValue = vote.value;\r\n\t\t\tvote.remove();\r\n\r\n\t\t\tif (value != 0) {\r\n\t\t\t\tvote = new Vote({\r\n\t\t\t\t\tuser: user,\r\n\t\t\t\t\tcomment: comment,\r\n\t\t\t\t\tvalue: value\r\n\t\t\t\t});\r\n\t\t\t\tvote.save((err) => {\r\n\t\t\t\t\tif (err) {\r\n\t\t\t\t\t\treturn res.json({\r\n\t\t\t\t\t\t\taction: \"Error: \" + err.message,\r\n\t\t\t\t\t\t\tstatus: 'error',\r\n\t\t\t\t\t\t\tcode: 444\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Karma Change\r\n\t\t\t\t\t\tComment.findById(comment, (err, data) => {\r\n\t\t\t\t\t\t\tdata.karma += parseInt(value) - removedValue;\r\n\t\t\t\t\t\t\tdata.save();\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\treturn res.json({\r\n\t\t\t\t\t\t\taction: 'Vote created',\r\n\t\t\t\t\t\t\tvote: vote,\r\n\t\t\t\t\t\t\tstatus: 'ok',\r\n\t\t\t\t\t\t\tcode: 200\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\r\n\t\t\t\tComment.findById(comment, (err, data) => {\r\n\t\t\t\t\tif (err) {\r\n\t\t\t\t\t\treturn res.json({\r\n\t\t\t\t\t\t\taction: \"Error: \" + err.message,\r\n\t\t\t\t\t\t\tstatus: 'error',\r\n\t\t\t\t\t\t\tcode: 444\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdata.karma -= removedValue;\r\n\t\t\t\t\tdata.save();\r\n\r\n\t\t\t\t\treturn res.json({\r\n\t\t\t\t\t\taction: 'Vote deleted',\r\n\t\t\t\t\t\tstatus: 'ok',\r\n\t\t\t\t\t\tcode: 200\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n});\r\n\r\n// Search methods\r\n\r\n// Get all users\r\nrouter.get('/all_from_post', (req, res, next) => {\r\n\tlet post_id = req.query.id;\r\n\r\n\tconsole.log(post_id);\r\n\r\n\tComment.find({\r\n\t\tpost: post_id\r\n\t}, (err, docs) => {\r\n\t\tif (!err) {\r\n\t\t\treturn res.json(JSON.stringify(docs));\r\n\t\t} else {\r\n\t\t\treturn res.json({\r\n\t\t\t\taction: \"Error: \" + err.message,\r\n\t\t\t\tstatus: 'error',\r\n\t\t\t\tcode: 444\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n});\r\n\r\n// Get by id\r\nrouter.get('/id/:post_id', (req, res, next) => {\r\n\tlet post_id = req.params.post_id;\r\n\r\n\tUser.findById(post_id, (err, docs) => {\r\n\t\tif (!err) {\r\n\t\t\treturn res.json(JSON.stringify(docs));\r\n\t\t} else {\r\n\t\t\treturn res.json({\r\n\t\t\t\taction: \"Error: \" + err.message,\r\n\t\t\t\tstatus: 'error',\r\n\t\t\t\tcode: 444\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n});\r\n\r\n\r\n\r\n// Test vars\r\n\r\n// Create dump for test\r\nrouter.get('/create_dump', (req, res, next) => {\r\n\r\n\tvar comment_user = null;\r\n\tvar comment_post = null;\r\n\tUser.findOne({}, (err, user) => {\r\n\t\tcomment_user = user;\r\n\r\n\t\tPost.findOne({}, (err, post) => {\r\n\t\t\tcomment_post = post;\r\n\t\t\tconsole.log(comment_post._id);\r\n\r\n\t\t\tlet joeComment = new Comment({\r\n\t\t\t\tpost: comment_post._id,\r\n\t\t\t\tuser: comment_user._id,\r\n\t\t\t\tdescription: \"Um elefante incomoda muita gente porém 2 elefantes incomoda incomoda muito mais\"\r\n\t\t\t});\r\n\t\t\tjoeComment.save();\r\n\t\t\tconsole.log(joeComment);\r\n\r\n\t\t\treturn res.json({\r\n\t\t\t\taction: 'Joe comment created',\r\n\t\t\t\tcomment: joeComment,\r\n\t\t\t\tstatus: 'ok',\r\n\t\t\t\tcode: 200\r\n\t\t\t});\r\n\t\t});\r\n\t});\r\n});\r\n\r\n// Delete All\r\nrouter.delete('/all_delete', (req, res, next) => {\r\n\tComment.find({}, (err, data) => {\r\n\t\tlet coments = data;\r\n\r\n\t\tfor (const i in coments) {\r\n\t\t\tif (coments.hasOwnProperty(i)) {\r\n\t\t\t\tconst element = coments[i];\r\n\t\t\t\telement.remove();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn res.json({\r\n\t\t\taction: 'All comments deleted',\r\n\t\t\tstatus: 'ok',\r\n\t\t\tcode: 200\r\n\t\t});\r\n\t});\r\n});\r\n\r\nmodule.exports = router;"]}