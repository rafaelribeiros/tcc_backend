{"version":3,"sources":["../../src/route/posts.js"],"names":["express","require","router","Router","Post","Vote","bcrypt","User","post","req","res","next","console","log","body","user","title","description","type","lat","lng","_id","loc","coordinates","save","err","json","action","message","status","code","put","updatedPost","findById","data","delete","post_id","id","remove","value","findOne","vote","karma","parseInt","removedValue","get","find","docs","query","coords","$near","params","joe","posts","i","hasOwnProperty","element","module","exports"],"mappings":"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","file":"posts.js","sourcesContent":["'use strict';\r\n\r\nconst express = require('express');\r\nconst router = express.Router();\r\n\r\nconst Post = require('model/Post');\r\nconst Vote = require('model/Vote');\r\n\r\nconst bcrypt = require('bcrypt-nodejs');\r\n\r\n// Test\r\nconst User = require('model/User');\r\n\r\n// CRUD methods\r\n// Create Post //\r\nrouter.post('/create', (req, res, next) => {\r\n\tconsole.log(req.body);\r\n\tlet user = req.body.user;\r\n\tlet title = req.body.title;\r\n\tlet description = req.body.description;\r\n\tlet type = req.body.type;\r\n\tlet lat = req.body.lat;\r\n\tlet lng = req.body.lng;\r\n\r\n\tlet post = new Post({\r\n\t\tuser: user._id,\r\n\t\ttitle: title,\r\n\t\tdescription: description,\r\n\t\ttype: type,\r\n\t\tloc: {\r\n\t\t\ttype: 'Point',\r\n\t\t\tcoordinates: [lat, lng]\r\n\t\t}\r\n\t});\r\n\tpost.save((err) => {\r\n\t\tif (err) {\r\n\t\t\treturn res.json({\r\n\t\t\t\taction: \"Error: \" + err.message,\r\n\t\t\t\tstatus: 'error',\r\n\t\t\t\tcode: 444\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\treturn res.json({\r\n\t\t\t\taction: 'New post created',\r\n\t\t\t\tpost: post,\r\n\t\t\t\tstatus: 'ok',\r\n\t\t\t\tcode: 200\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n});\r\n\r\n\r\n// Update Post //\r\nrouter.put('/update', (req, res, next) => {\r\n\t// console.log(req.body);\r\n\r\n\tlet updatedPost = req.body;\r\n\r\n\tconsole.log(updatedPost);\r\n\r\n\tPost.findById(updatedPost._id, (err, data) => {\r\n\r\n\t\tlet post = data;\r\n\r\n\t\tconsole.log(data);\r\n\r\n\t\tlet user = updatedPost.user;\r\n\t\tlet title = updatedPost.title;\r\n\t\tlet description = updatedPost.description;\r\n\t\tlet type = updatedPost.type;\r\n\t\tlet loc = updatedPost.loc;\r\n\r\n\r\n\t\tpost.user = user;\r\n\t\tpost.title = title;\r\n\t\tpost.description = description;\r\n\t\tpost.type = type;\r\n\t\tpost.loc = loc;\r\n\t\tpost.status = status;\r\n\r\n\t\tpost.save((err) => {\r\n\t\t\tif (err) {\r\n\t\t\t\treturn res.json({\r\n\t\t\t\t\taction: \"Error: \" + err.message,\r\n\t\t\t\t\tstatus: 'error',\r\n\t\t\t\t\tcode: 444\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\treturn res.json({\r\n\t\t\t\t\taction: 'Post updated',\r\n\t\t\t\t\tpost: post,\r\n\t\t\t\t\tstatus: 'ok',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n});\r\n\r\n// Delete User // \r\nrouter.delete('/delete', (req, res, next) => {\r\n\tlet post_id = req.body.id;\r\n\tPost.findById(post_id, (err, data) => {\r\n\t\tif (err) {\r\n\t\t\treturn res.json({\r\n\t\t\t\taction: \"Error: \" + err.message,\r\n\t\t\t\tstatus: 'error',\r\n\t\t\t\tcode: 444\r\n\t\t\t});\r\n\t\t}\r\n\t\tlet Post = data;\r\n\r\n\t\tPost.remove((err) => {\r\n\t\t\tif (err) {\r\n\t\t\t\treturn res.json({\r\n\t\t\t\t\taction: \"Error: \" + err.message,\r\n\t\t\t\t\tstatus: 'error',\r\n\t\t\t\t\tcode: 444\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\treturn res.json({\r\n\t\t\t\t\taction: 'Post deleted',\r\n\t\t\t\t\tstatus: 'ok',\r\n\t\t\t\t\tcode: 200\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n});\r\n\r\n// Vote\r\nrouter.post('/vote', (req, res, next) => {\r\n\tlet post = req.body.post;\r\n\tlet value = req.body.value;\r\n\tlet user = req.body.user;\r\n\r\n\tVote.findOne({\r\n\t\tpost: post,\r\n\t\tuser: user\r\n\t}, (err, vote) => {\r\n\t\tif (!vote) { // Vote doesn't exist\r\n\r\n\t\t\tif (value == 0) {\r\n\t\t\t\treturn res.json({\r\n\t\t\t\t\taction: \"Error: Vote doesn't exist, value can't be zero\",\r\n\t\t\t\t\tstatus: 'error',\r\n\t\t\t\t\tcode: 444\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// Create vote\r\n\t\t\tvote = new Vote({\r\n\t\t\t\tuser: user,\r\n\t\t\t\tpost: post,\r\n\t\t\t\tvalue: value\r\n\t\t\t});\r\n\t\t\tvote.save((err) => {\r\n\t\t\t\tif (err) {\r\n\t\t\t\t\treturn res.json({\r\n\t\t\t\t\t\taction: \"Error: \" + err.message,\r\n\t\t\t\t\t\tstatus: 'error',\r\n\t\t\t\t\t\tcode: 444\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Karma Change\r\n\t\t\t\t\tPost.findById(post, (err, data) => {\r\n\t\t\t\t\t\tdata.karma += parseInt(value);\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\treturn res.json({\r\n\t\t\t\t\t\taction: 'Vote created',\r\n\t\t\t\t\t\tvote: vote,\r\n\t\t\t\t\t\tstatus: 'ok',\r\n\t\t\t\t\t\tcode: 200\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t} else { // update vote\r\n\t\t\tlet removedValue = vote.value;\r\n\t\t\tvote.remove();\r\n\r\n\t\t\tif (value != 0) {\r\n\t\t\t\tvote = new Vote({\r\n\t\t\t\t\tuser: user,\r\n\t\t\t\t\tpost: post,\r\n\t\t\t\t\tvalue: value\r\n\t\t\t\t});\r\n\t\t\t\tvote.save((err) => {\r\n\t\t\t\t\tif (err) {\r\n\t\t\t\t\t\treturn res.json({\r\n\t\t\t\t\t\t\taction: \"Error: \" + err.message,\r\n\t\t\t\t\t\t\tstatus: 'error',\r\n\t\t\t\t\t\t\tcode: 444\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Karma Change\r\n\t\t\t\t\t\tPost.findById(post, (err, data) => {\r\n\t\t\t\t\t\t\tif (err) {\r\n\t\t\t\t\t\t\t\treturn res.json({\r\n\t\t\t\t\t\t\t\t\taction: \"Error: \" + err.message,\r\n\t\t\t\t\t\t\t\t\tstatus: 'error',\r\n\t\t\t\t\t\t\t\t\tcode: 444\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tdata.karma += parseInt(value) - removedValue;\r\n\t\t\t\t\t\t\tdata.save();\r\n\r\n\t\t\t\t\t\t\treturn res.json({\r\n\t\t\t\t\t\t\t\taction: 'Vote created',\r\n\t\t\t\t\t\t\t\tvote: vote,\r\n\t\t\t\t\t\t\t\tstatus: 'ok',\r\n\t\t\t\t\t\t\t\tcode: 200\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\r\n\t\t\t\tPost.findById(post, (err, data) => {\r\n\t\t\t\t\tif (err) {\r\n\t\t\t\t\t\treturn res.json({\r\n\t\t\t\t\t\t\taction: \"Error: \" + err.message,\r\n\t\t\t\t\t\t\tstatus: 'error',\r\n\t\t\t\t\t\t\tcode: 444\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdata.karma -= removedValue;\r\n\t\t\t\t\tdata.save();\r\n\r\n\t\t\t\t\treturn res.json({\r\n\t\t\t\t\t\taction: 'Vote deleted',\r\n\t\t\t\t\t\tstatus: 'ok',\r\n\t\t\t\t\t\tcode: 200\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n});\r\n\r\n// Search methods\r\n\r\n// Get all post\r\nrouter.get('/all', (req, res, next) => {\r\n\tPost.find({}, (err, docs) => {\r\n\t\tif (!err) {\r\n\t\t\treturn res.json(JSON.stringify(docs));\r\n\t\t} else {\r\n\t\t\treturn res.json({\r\n\t\t\t\taction: \"Error: \" + err.message,\r\n\t\t\t\tstatus: 'error',\r\n\t\t\t\tcode: 444\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n});\r\n\r\nrouter.get('/all_close', (req, res, next) => {\r\n\tlet lat = req.query.lat;\r\n\tlet lng = req.query.lng;\r\n\r\n\tlet coords = {\r\n\t\ttype: 'Point',\r\n\t\tcoordinates: [lat, lng]\r\n\t};\r\n\r\n\tPost.find({\r\n\t\t\tloc: {\r\n\t\t\t\t$near: coords\r\n\t\t\t}\r\n\t\t},\r\n\t\t(err, docs) => {\r\n\t\t\tif (!err) {\r\n\t\t\t\treturn res.json(JSON.stringify(docs));\r\n\t\t\t} else {\r\n\t\t\t\treturn res.json({\r\n\t\t\t\t\taction: \"Error: \" + err.message,\r\n\t\t\t\t\tstatus: 'error',\r\n\t\t\t\t\tcode: 444\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n});\r\n\r\n// Get by id\r\nrouter.get('/id/:post_id', (req, res, next) => {\r\n\tlet post_id = req.params.post_id;\r\n\r\n\tPost.findById(post_id, (err, docs) => {\r\n\t\tif (!err) {\r\n\t\t\treturn res.json(JSON.stringify(docs));\r\n\t\t} else {\r\n\t\t\treturn res.json({\r\n\t\t\t\taction: \"Error: \" + err.message,\r\n\t\t\t\tstatus: 'error',\r\n\t\t\t\tcode: 444\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n});\r\n\r\n\r\n\r\n// Test vars\r\n\r\n// Create dump for test\r\nrouter.get('/create_dump', (req, res, next) => {\r\n\tUser.findOne({}, (err, data) => {\r\n\t\tlet user = data;\r\n\r\n\t\tlet joe = new Post({\r\n\t\t\tuser: user._id,\r\n\t\t\ttitle: \"Joe is in danger\",\r\n\t\t\tdescription: \"I was there Joe was assaulted by 32 minions and one big dragon. Terrible!\",\r\n\t\t\ttype: \"Assalto\",\r\n\t\t\tloc: {\r\n\t\t\t\ttype: 'Point',\r\n\t\t\t\tcoordinates: [1.0, 1.0]\r\n\t\t\t}\r\n\t\t});\r\n\t\tjoe.save();\r\n\r\n\t\t//   Post.findOne({}).\r\n\t\t//   populate('user_id').\r\n\t\t//   exec(function (err, story) {\r\n\t\t// \tif (err) return handleError(err);\r\n\t\t// \tconsole.log(\"ae\", story);\r\n\t\t//   });\r\n\r\n\t\tconsole.log(joe);\r\n\r\n\t\treturn res.json({\r\n\t\t\taction: 'Joe post created',\r\n\t\t\tpost: joe,\r\n\t\t\tstatus: 'ok',\r\n\t\t\tcode: 200\r\n\t\t});\r\n\t});\r\n});\r\n\r\n// Delete All\r\nrouter.delete('/all_delete', (req, res, next) => {\r\n\tPost.find({}, (err, data) => {\r\n\t\tlet posts = data;\r\n\r\n\t\tfor (const i in posts) {\r\n\t\t\tif (posts.hasOwnProperty(i)) {\r\n\t\t\t\tconst element = posts[i];\r\n\t\t\t\telement.remove();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn res.json({\r\n\t\t\taction: 'All posts deleted',\r\n\t\t\tstatus: 'ok',\r\n\t\t\tcode: 200\r\n\t\t});\r\n\t});\r\n});\r\n\r\nmodule.exports = router;"]}