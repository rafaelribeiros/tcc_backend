{"version":3,"sources":["../src/app.js"],"names":["process","env","NODE_PATH","__dirname","require","Module","_initPaths","express","path","favicon","logger","cookieParser","bodyParser","mongoose","connect","connection","on","err","console","log","index","users","posts","comments","app","set","join","use","json","urlencoded","extended","static","req","res","next","Error","status","locals","message","error","get","render","module","exports"],"mappings":"AAAA;;AAEAA,QAAQC,GAAR,CAAYC,SAAZ,GAAwBC,SAAxB;AACAC,QAAQ,QAAR,EAAkBC,MAAlB,CAAyBC,UAAzB;;AAEA,IAAMC,UAAUH,QAAQ,SAAR,CAAhB;AACA,IAAMI,OAAOJ,QAAQ,MAAR,CAAb;AACA,IAAMK,UAAUL,QAAQ,eAAR,CAAhB;AACA,IAAMM,SAASN,QAAQ,QAAR,CAAf;AACA,IAAMO,eAAeP,QAAQ,eAAR,CAArB;AACA,IAAMQ,aAAaR,QAAQ,aAAR,CAAnB;AACA,IAAMS,WAAWT,QAAQ,UAAR,CAAjB;;AAEAS,SAASC,OAAT,CAAiB,mQAAjB;AACAD,SAASE,UAAT,CAAoBC,EAApB,CAAuB,OAAvB,EAAgC,UAACC,GAAD,EAAS;AACvCC,UAAQC,GAAR,CAAY,kBAAkBF,GAA9B;AACD,CAFD;;AAIA,IAAIG,QAAQhB,QAAQ,aAAR,CAAZ;AACA,IAAIiB,QAAQjB,QAAQ,aAAR,CAAZ;AACA,IAAIkB,QAAQlB,QAAQ,aAAR,CAAZ;AACA,IAAImB,WAAWnB,QAAQ,gBAAR,CAAf;;AAEA,IAAIoB,MAAMjB,SAAV;;AAIA;AACAiB,IAAIC,GAAJ,CAAQ,OAAR,EAAiBjB,KAAKkB,IAAL,CAAUvB,SAAV,EAAqB,OAArB,CAAjB;AACAqB,IAAIC,GAAJ,CAAQ,aAAR,EAAuB,MAAvB;;AAEA;AACA;AACAD,IAAIG,GAAJ,CAAQjB,OAAO,KAAP,CAAR;AACAc,IAAIG,GAAJ,CAAQf,WAAWgB,IAAX,EAAR;AACAJ,IAAIG,GAAJ,CAAQf,WAAWiB,UAAX,CAAsB;AAC5BC,YAAU;AADkB,CAAtB,CAAR;AAGAN,IAAIG,GAAJ,CAAQhB,cAAR;AACAa,IAAIG,GAAJ,CAAQpB,QAAQwB,MAAR,CAAevB,KAAKkB,IAAL,CAAUvB,SAAV,EAAqB,QAArB,CAAf,CAAR;;AAEAqB,IAAIG,GAAJ,CAAQ,GAAR,EAAaP,KAAb;AACAI,IAAIG,GAAJ,CAAQ,OAAR,EAAiBN,KAAjB;AACAG,IAAIG,GAAJ,CAAQ,OAAR,EAAiBL,KAAjB;AACAE,IAAIG,GAAJ,CAAQ,UAAR,EAAoBJ,QAApB;;AAGA;AACAC,IAAIG,GAAJ,CAAQ,UAAUK,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAChC,MAAIjB,MAAM,IAAIkB,KAAJ,CAAU,WAAV,CAAV;AACAlB,MAAImB,MAAJ,GAAa,GAAb;AACAF,OAAKjB,GAAL;AACD,CAJD;;AAMA;AACAO,IAAIG,GAAJ,CAAQ,UAAUV,GAAV,EAAee,GAAf,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+B;AACrC;AACAD,MAAII,MAAJ,CAAWC,OAAX,GAAqBrB,IAAIqB,OAAzB;AACAL,MAAII,MAAJ,CAAWE,KAAX,GAAmBP,IAAIR,GAAJ,CAAQgB,GAAR,CAAY,KAAZ,MAAuB,aAAvB,GAAuCvB,GAAvC,GAA6C,EAAhE;;AAEA;AACAgB,MAAIG,MAAJ,CAAWnB,IAAImB,MAAJ,IAAc,GAAzB;AACAH,MAAIQ,MAAJ,CAAW,OAAX;AACD,CARD;;AAUAC,OAAOC,OAAP,GAAiBnB,GAAjB","file":"app.js","sourcesContent":["'use strict';\r\n\r\nprocess.env.NODE_PATH = __dirname;\r\nrequire('module').Module._initPaths();\r\n\r\nconst express = require('express');\r\nconst path = require('path');\r\nconst favicon = require('serve-favicon');\r\nconst logger = require('morgan');\r\nconst cookieParser = require('cookie-parser');\r\nconst bodyParser = require('body-parser');\r\nconst mongoose = require('mongoose');\r\n\r\nmongoose.connect('mongodb://civitaAppUser:p55dGFaNsXj94B7b@civitaapp-shard-00-00-pywii.mongodb.net:27017,civitaapp-shard-00-01-pywii.mongodb.net:27017,civitaapp-shard-00-02-pywii.mongodb.net:27017/civita?ssl=true&replicaSet=civitaApp-shard-0&authSource=admin&retryWrites=true');\r\nmongoose.connection.on('error', (err) => {\r\n  console.log('Mongo error: ' + err);\r\n});\r\n\r\nvar index = require('route/index');\r\nvar users = require('route/users');\r\nvar posts = require('route/posts');\r\nvar comments = require('route/comments');\r\n\r\nvar app = express();\r\n\r\n\r\n\r\n// view engine setup\r\napp.set('views', path.join(__dirname, 'views'));\r\napp.set('view engine', 'jade');\r\n\r\n// uncomment after placing your favicon in /public\r\n//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\r\napp.use(logger('dev'));\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({\r\n  extended: false\r\n}));\r\napp.use(cookieParser());\r\napp.use(express.static(path.join(__dirname, 'public')));\r\n\r\napp.use('/', index);\r\napp.use('/user', users);\r\napp.use('/post', posts);\r\napp.use('/comment', comments);\r\n\r\n\r\n// catch 404 and forward to error handler\r\napp.use(function (req, res, next) {\r\n  var err = new Error('Not Found');\r\n  err.status = 404;\r\n  next(err);\r\n});\r\n\r\n// error handler\r\napp.use(function (err, req, res, next) {\r\n  // set locals, only providing error in development\r\n  res.locals.message = err.message;\r\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\r\n\r\n  // render the error page\r\n  res.status(err.status || 500);\r\n  res.render('error');\r\n});\r\n\r\nmodule.exports = app;"]}